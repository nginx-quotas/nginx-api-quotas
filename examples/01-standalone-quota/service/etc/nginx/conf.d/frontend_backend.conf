# -----------------------------------------------------------------------------#
#                                                                              #
#               Sample Configuration: Frontend Site, Backend App               #
#                       (for Open ID Connect workflow)                         #
#                                                                              #
# -----------------------------------------------------------------------------#

# Quota module
js_import quota from quota/quotas.js;
include quota/quota_keyval_zones.conf;

# Custom log format to include the 'sub' claim in the REMOTE_USER field.
#
log_format quota_jwt '$remote_addr - $jwt_claim_sub [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
                    '"$http_x_forwarded_for"';

# Sample upstream server for the frontend site.
#
upstream my_frontend_site {
    zone my_frontend_site 64k;
    server host.docker.internal:80;
}

# upstream server for the object storage.
#
upstream my_object_storage {
    zone my_backend_app 64k;
    server host.docker.internal:443;
}

# Main frontend web server & backend-API gateway w/ OIDC workflow
#
server {
    include quota/quota_apis.conf;

    # Set option to enable quota limit on the user/proxy with all methods
    set $proxy_name               "image-api";
    set $proxy_ver                "v1";
    # set $quota_enable_per_user_proxy        1;
    # set $quota_enable_per_group_proxy       0;

    # Enable when debugging is needed
    error_log  /var/log/nginx/error.log  debug; # Reduce severity level as required
    access_log /var/log/nginx/access.log quota_jwt;

    listen 443 ssl; # Use SSL/TLS in production.
    server_name my-quota-limiter.com;

    ssl_certificate     /etc/controller-agent/configurator/auxfiles/my-sample.crt;
    ssl_certificate_key /etc/controller-agent/configurator/auxfiles/my-sample.key;

    # OIDC workflow
    include oidc/oidc_nginx_server.conf;  

    # Quota Simulator Frontend Example:
    #  - Default landing page: no need OIDC workflow to show 'login' button.
    #  - The site can be protected with OIDC after calling /login endpoint.
    #
    location / {
        proxy_pass http://my_frontend_site;
        access_log /var/log/nginx/access.log quota_jwt;
    }

    # Backend App Example:
    #  - This is protected by session management not to be accessed by other
    #    user-agent, client IP and ID when $session_validation_enable is true.
    #  - It can be additionally protected by using token(s) that is(are) received
    #    by IDP after successful login from the frontend based on OIDC workflow.
    #
    location /images {
        # TODO: consolidate a validation between session and quota-limit.
        # - Because auth_request can't be used twice within a location block.
        #
        # auth_request    /_session_validation;
        # auth_request_set $session_status $upstream_status;
        # error_page 401   @session_error;

        auth_jwt "" token=$access_token;
        auth_jwt_key_request /_jwks_uri;

        # Set option to enable quota limit per each request method on user/proxy
        # if ( $request_method = GET ) {
        #     set $quota_enable_per_user_proxy_read  1;
        #     set $quota_enable_per_user_proxy_write 0;
        # }
        # if ( $request_method = (POST|PUT|DELETE) ) {
        #     set $quota_enable_per_user_proxy_write 1;
        # }

        # Validate a quota remaining and decrease a quata usage
        set $x_user_id $jwt_claim_sub;
        auth_request       /_quota_validation;
        mirror             /_quota_decrement;
        auth_request_set   $limit_msg $upstream_status;
        error_page 403   = @too_many_requests;
        error_page 404 500 @quota_not_found;

        proxy_set_header Authorization "Bearer $access_token";
        proxy_set_header X-User-Id $x_user_id;
        proxy_pass http://my_object_storage/images;

        include quota/quota_header.conf;
        access_log /var/log/nginx/access.log quota_jwt;
    }

    location /dummy {
        include quota/quota_decrement_request.conf;

        proxy_pass http://my_object_storage/dummy;

        include quota/quota_header.conf;
        access_log /var/log/nginx/access.log quota_jwt;
    }

    # For testing ID / access token / cookie
    # - Remove or disable this configuration in production.
    include oidc/test_oidc_token.conf;
}

# vim: syntax=nginx